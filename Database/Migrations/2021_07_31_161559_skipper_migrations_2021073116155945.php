<?php
/* 
 * Migrations generated by: Skipper (http://www.skipper18.com)
 * Migration id: fa1365fa-4b28-4f76-b75b-173983af865a
 * Migration datetime: 2021-07-31 16:15:59.450525
 */ 

use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class SkipperMigrations2021073116155945 extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::table('vh_lang_categories', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_languages', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->bigInteger('vh_lang_category_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->bigInteger('vh_lang_language_id')->nullable(true)->unsigned()->after('vh_lang_category_id')->change();
        });
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->bigInteger('vh_media_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_medias', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_migrations', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_modules', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->bigInteger('vh_notification_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_notifications', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->bigInteger('vh_notification_id')->nullable(true)->unsigned()->after('vh_user_id')->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->bigInteger('vh_user_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_permissions', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->bigInteger('vh_user_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->bigInteger('vh_permission_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->bigInteger('vh_role_id')->nullable(true)->unsigned()->after('vh_permission_id')->change();
        });
        Schema::table('vh_roles', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_settings', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->bigInteger('vh_theme_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->bigInteger('vh_theme_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->bigInteger('vh_template_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->bigInteger('vh_theme_id')->nullable(true)->unsigned()->after('vh_template_id')->change();
        });
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->bigInteger('vh_theme_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->bigInteger('vh_user_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->bigInteger('vh_role_id')->nullable(true)->unsigned()->after('vh_user_id')->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->bigInteger('vh_user_id')->nullable(true)->unsigned()->after('id')->change();
        });
        Schema::table('vh_users', function (Blueprint $table) {
            $table->bigInteger('id')->autoIncrement()->unsigned()->change();
        });
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'vh_theme_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `name` [COLUMN_DEF] AFTER `vh_theme_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'slug');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `created_at` [COLUMN_DEF] AFTER `slug`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'vh_theme_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `name` [COLUMN_DEF] AFTER `vh_theme_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `excerpt` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'excerpt');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `slug` [COLUMN_DEF] AFTER `excerpt`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `created_at` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('vh_template_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `vh_template_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'vh_theme_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `name` [COLUMN_DEF] AFTER `vh_theme_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('content', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `content` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'content');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `excerpt` [COLUMN_DEF] AFTER `content`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'excerpt');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `slug` [COLUMN_DEF] AFTER `excerpt`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('is_repeatable', 'slug');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `is_repeatable` [COLUMN_DEF] AFTER `slug`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('uuid', 'type');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `uuid` [COLUMN_DEF] AFTER `type`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'uuid');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `created_at` [COLUMN_DEF] AFTER `uuid`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `deleted_at` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'vh_theme_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `name` [COLUMN_DEF] AFTER `vh_theme_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `excerpt` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'excerpt');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `slug` [COLUMN_DEF] AFTER `excerpt`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('file_path', 'type');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `file_path` [COLUMN_DEF] AFTER `type`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'file_path');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `created_at` [COLUMN_DEF] AFTER `file_path`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('db_table_prefix', 'author_website');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `db_table_prefix` [COLUMN_DEF] AFTER `author_website`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('description', 'db_table_prefix');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `description` [COLUMN_DEF] AFTER `db_table_prefix`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('vaah_url', 'update_checked_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `vaah_url` [COLUMN_DEF] AFTER `update_checked_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'version_number');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `created_at` [COLUMN_DEF] AFTER `version_number`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('updated_at', 'created_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `updated_at` [COLUMN_DEF] AFTER `created_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `deleted_at` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->moveColumnAfter('vh_lang_category_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_lang_strings` MODIFY `vh_lang_category_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->moveColumnAfter('content', 'vh_lang_language_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_lang_strings` MODIFY `content` [COLUMN_DEF] AFTER `vh_lang_language_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->moveColumnAfter('vh_notification_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notification_contents` MODIFY `vh_notification_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notified` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->moveColumnAfter('vh_notification_id', 'vh_user_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notified` MODIFY `vh_notification_id` [COLUMN_DEF] AFTER `vh_user_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->moveColumnAfter('vh_media_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_mediable` MODIFY `vh_media_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_registrations` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->moveColumnAfter('vh_permission_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_role_permissions` MODIFY `vh_permission_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'vh_role_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_role_permissions` MODIFY `created_at` [COLUMN_DEF] AFTER `vh_role_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_authorizations` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_roles` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->moveColumnAfter('vh_role_id', 'vh_user_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_roles` MODIFY `vh_role_id` [COLUMN_DEF] AFTER `vh_user_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('created_ip', 'country_code');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `created_ip` [COLUMN_DEF] AFTER `country_code`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('designation', 'created_ip');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `designation` [COLUMN_DEF] AFTER `created_ip`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('username', 'title');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `username` [COLUMN_DEF] AFTER `title`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'website');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `created_at` [COLUMN_DEF] AFTER `website`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('updated_at', 'created_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `updated_at` [COLUMN_DEF] AFTER `created_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `deleted_at` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->foreign('vh_theme_id')->references('id')->on('vh_themes');
        });
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->foreign('vh_theme_id')->references('id')->on('vh_themes');
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->foreign('vh_theme_id')->references('id')->on('vh_themes');
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->foreign('vh_template_id')->references('id')->on('vh_theme_templates');
        });
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->foreign('vh_theme_id')->references('id')->on('vh_themes');
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->foreign('vh_lang_language_id')->references('id')->on('vh_lang_languages');
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->foreign('vh_lang_category_id')->references('id')->on('vh_lang_categories');
        });
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->foreign('vh_notification_id')->references('id')->on('vh_notifications');
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->foreign('vh_notification_id')->references('id')->on('vh_notifications');
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->foreign('vh_user_id')->references('id')->on('vh_users');
        });
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->foreign('vh_media_id')->references('id')->on('vh_medias');
        });
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->foreign('vh_user_id')->references('id')->on('vh_users');
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->foreign('vh_role_id')->references('id')->on('vh_roles');
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->foreign('vh_permission_id')->references('id')->on('vh_permissions');
        });
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->foreign('vh_user_id')->references('id')->on('vh_users');
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->foreign('vh_role_id')->references('id')->on('vh_roles');
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->foreign('vh_user_id')->references('id')->on('vh_users');
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        if (Schema::hasTable('vh_user_roles')) {
            Schema::table('vh_user_roles', function (Blueprint $table) {
                $table->dropForeign(['vh_user_id']);
            });
        }
        if (Schema::hasTable('vh_user_roles')) {
            Schema::table('vh_user_roles', function (Blueprint $table) {
                $table->dropForeign(['vh_role_id']);
            });
        }
        if (Schema::hasTable('vh_user_authorizations')) {
            Schema::table('vh_user_authorizations', function (Blueprint $table) {
                $table->dropForeign(['vh_user_id']);
            });
        }
        if (Schema::hasTable('vh_role_permissions')) {
            Schema::table('vh_role_permissions', function (Blueprint $table) {
                $table->dropForeign(['vh_permission_id']);
            });
        }
        if (Schema::hasTable('vh_role_permissions')) {
            Schema::table('vh_role_permissions', function (Blueprint $table) {
                $table->dropForeign(['vh_role_id']);
            });
        }
        if (Schema::hasTable('vh_registrations')) {
            Schema::table('vh_registrations', function (Blueprint $table) {
                $table->dropForeign(['vh_user_id']);
            });
        }
        if (Schema::hasTable('vh_mediable')) {
            Schema::table('vh_mediable', function (Blueprint $table) {
                $table->dropForeign(['vh_media_id']);
            });
        }
        if (Schema::hasTable('vh_notified')) {
            Schema::table('vh_notified', function (Blueprint $table) {
                $table->dropForeign(['vh_user_id']);
            });
        }
        if (Schema::hasTable('vh_notified')) {
            Schema::table('vh_notified', function (Blueprint $table) {
                $table->dropForeign(['vh_notification_id']);
            });
        }
        if (Schema::hasTable('vh_notification_contents')) {
            Schema::table('vh_notification_contents', function (Blueprint $table) {
                $table->dropForeign(['vh_notification_id']);
            });
        }
        if (Schema::hasTable('vh_lang_strings')) {
            Schema::table('vh_lang_strings', function (Blueprint $table) {
                $table->dropForeign(['vh_lang_category_id']);
            });
        }
        if (Schema::hasTable('vh_lang_strings')) {
            Schema::table('vh_lang_strings', function (Blueprint $table) {
                $table->dropForeign(['vh_lang_language_id']);
            });
        }
        if (Schema::hasTable('vh_theme_templates')) {
            Schema::table('vh_theme_templates', function (Blueprint $table) {
                $table->dropForeign(['vh_theme_id']);
            });
        }
        if (Schema::hasTable('vh_theme_template_fields')) {
            Schema::table('vh_theme_template_fields', function (Blueprint $table) {
                $table->dropForeign(['vh_template_id']);
            });
        }
        if (Schema::hasTable('vh_theme_template_fields')) {
            Schema::table('vh_theme_template_fields', function (Blueprint $table) {
                $table->dropForeign(['vh_theme_id']);
            });
        }
        if (Schema::hasTable('vh_theme_locations')) {
            Schema::table('vh_theme_locations', function (Blueprint $table) {
                $table->dropForeign(['vh_theme_id']);
            });
        }
        if (Schema::hasTable('vh_theme_blocks')) {
            Schema::table('vh_theme_blocks', function (Blueprint $table) {
                $table->dropForeign(['vh_theme_id']);
            });
        }
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'created_ip');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `deleted_at` [COLUMN_DEF] AFTER `created_ip`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('updated_at', 'title');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `updated_at` [COLUMN_DEF] AFTER `title`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'country_code');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `created_at` [COLUMN_DEF] AFTER `country_code`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('username', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `username` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('designation', 'deleted_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `designation` [COLUMN_DEF] AFTER `deleted_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_users', function (Blueprint $table) {
            $table->moveColumnAfter('created_ip', 'created_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_users` MODIFY `created_ip` [COLUMN_DEF] AFTER `created_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->moveColumnAfter('vh_role_id', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_roles` MODIFY `vh_role_id` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'vh_role_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_roles` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `vh_role_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_user_authorizations` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_role_permissions` MODIFY `created_at` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->moveColumnAfter('vh_permission_id', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_role_permissions` MODIFY `vh_permission_id` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'uuid');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_registrations` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `uuid`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->moveColumnAfter('vh_media_id', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_mediable` MODIFY `vh_media_id` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->moveColumnAfter('vh_notification_id', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notified` MODIFY `vh_notification_id` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->moveColumnAfter('vh_user_id', 'vh_notification_id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notified` MODIFY `vh_user_id` [COLUMN_DEF] AFTER `vh_notification_id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->moveColumnAfter('vh_notification_id', 'value');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_notification_contents` MODIFY `vh_notification_id` [COLUMN_DEF] AFTER `value`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->moveColumnAfter('content', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_lang_strings` MODIFY `content` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->moveColumnAfter('vh_lang_category_id', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_lang_strings` MODIFY `vh_lang_category_id` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'db_table_prefix');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `deleted_at` [COLUMN_DEF] AFTER `db_table_prefix`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('updated_at', 'update_checked_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `updated_at` [COLUMN_DEF] AFTER `update_checked_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'author_website');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `created_at` [COLUMN_DEF] AFTER `author_website`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('vaah_url', 'updated_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `vaah_url` [COLUMN_DEF] AFTER `updated_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('description', 'deleted_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `description` [COLUMN_DEF] AFTER `deleted_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->moveColumnAfter('db_table_prefix', 'created_by');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_themes` MODIFY `db_table_prefix` [COLUMN_DEF] AFTER `created_by`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `created_at` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('file_path', 'excerpt');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `file_path` [COLUMN_DEF] AFTER `excerpt`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `slug` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'created_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `excerpt` [COLUMN_DEF] AFTER `created_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `name` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_templates` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('deleted_at', 'created_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `deleted_at` [COLUMN_DEF] AFTER `created_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', 'content');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `created_at` [COLUMN_DEF] AFTER `content`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('uuid', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `uuid` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('is_repeatable', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `is_repeatable` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `slug` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'deleted_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `excerpt` [COLUMN_DEF] AFTER `deleted_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('content', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `content` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'meta');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `name` [COLUMN_DEF] AFTER `meta`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->moveColumnAfter('vh_template_id', 'uuid');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_template_fields` MODIFY `vh_template_id` [COLUMN_DEF] AFTER `uuid`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `created_at` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('slug', 'name');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `slug` [COLUMN_DEF] AFTER `name`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('excerpt', 'created_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `excerpt` [COLUMN_DEF] AFTER `created_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `name` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_locations` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('created_at', '');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `created_at` [COLUMN_DEF] AFTER ``');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('name', 'id');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `name` [COLUMN_DEF] AFTER `id`');
        });
        */
        /* Reordering of existing columns is not supported by Laravel Eloquent.
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->moveColumnAfter('vh_theme_id', 'updated_at');
        });
        */
        
        /* But you can create your own migrations with following SQL query based on your target SQL engine.
        DB::transaction(function () {
            DB::statement('ALTER TABLE `vh_theme_blocks` MODIFY `vh_theme_id` [COLUMN_DEF] AFTER `updated_at`');
        });
        */
        Schema::table('vh_users', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->integer('vh_user_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->integer('vh_role_id')->nullable(true)->after('vh_user_id')->change();
        });
        Schema::table('vh_user_roles', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->integer('vh_user_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_user_authorizations', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_themes', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->integer('vh_theme_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_theme_templates', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->integer('vh_theme_id')->nullable(true)->after('vh_template_id')->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->integer('vh_template_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_theme_template_fields', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->integer('vh_theme_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_theme_locations', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->integer('vh_theme_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_theme_blocks', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_settings', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_roles', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->integer('vh_role_id')->nullable(true)->after('vh_permission_id')->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->integer('vh_permission_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_role_permissions', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->integer('vh_user_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_registrations', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_permissions', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->integer('vh_user_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->integer('vh_notification_id')->nullable(true)->after('vh_user_id')->change();
        });
        Schema::table('vh_notified', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notifications', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->integer('vh_notification_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_notification_contents', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_modules', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_migrations', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_medias', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->string('vh_media_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_mediable', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->integer('vh_lang_language_id')->nullable(true)->after('vh_lang_category_id')->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->integer('vh_lang_category_id')->nullable(true)->after('id')->change();
        });
        Schema::table('vh_lang_strings', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_languages', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
        Schema::table('vh_lang_categories', function (Blueprint $table) {
            $table->integer('id')->autoIncrement()->unsigned()->change();
        });
    }
}
